{"version":3,"sources":["actions/index.js","actions/types.js","components/ExpenseTotals.js","components/ExpenseList.js","components/Home.js","components/expense/TypeList.js","components/expense/ExpenseForm.js","components/expense/ExpenseNew.js","components/expense/ExpenseEdit.js","components/App.js","reducers/index.js","reducers/expenseReducer.js","reducers/totalsReducer.js","reducers/typesReducer.js","index.js"],"names":["fetchExpenses","month","year","sort","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","expenseList","wrap","_context","prev","next","axios","get","params","sortBy","sent","type","payload","data","stop","this","_x","apply","arguments","deleteExpense","expenseId","_ref2","_callee2","_context2","delete","console","log","_x2","fetchTotals","_ref3","_callee3","expenseTotals","_context3","_x3","fetchTypes","_ref4","_callee4","expenseTypes","_context4","_x4","addType","name","_ref5","_callee5","_context5","put","_x5","Totals","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","props","Date","getMonth","getFullYear","react_default","createElement","className","style","display","width","textAlign","Intl","NumberFormat","currency","format","totals","total","remaining","Component","connect","ExpenseList","componentDidMount","formatDate","date","parse","toDateString","onDeleteExpense","id","refresh","nextMonth","updatedMonth","updatedYear","setState","loading","previousMonth","sortSelect","current","value","refreshTotals","Promise","all","renderExpenses","expense","expenses","map","key","_id","height","overflow","description","marginLeft","onClick","react_router_dom","to","pathname","render","Moment","class","ExpenseTotals","ref","onChange","React","createRef","filterSelect","_ref6","Home","components_ExpenseList","TypeList","componentDidUpdate","Materialize","AutoInit","onDialogOpen","open","onDialogClose","onAddType","typeName","document","getElementById","renderAddTypeForm","index_es","autoComplete","renderOptions","_","types","padding","input","meta","touched","error","position","top","left","ExpenseForm","initProps","formatDateValue","initialize","renderFields","Field","label","component","renderTextField","renderDatePickerField","onSubmit","handleSubmit","onExpenseSubmit","marginTop","zIndex","_ref$meta","assign","_ref2$meta","react_datepicker_es","selected","placeholderText","dateFormat","parsedDate","toDate","reduxForm","validate","values","errors","form","ExpenseNew","alert","t0","history","push","expense_ExpenseForm","submitExpense","ExpenseEdit","post","updateExpense","location","App","react_router","path","exact","actions","combineReducers","length","undefined","action","formReducer","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","es","components_App","querySelector"],"mappings":"qhBAGaA,EAAgB,SAACC,EAAOC,EAAMC,GAAd,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAuB,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACtBC,IAAMC,IAAI,gBAAkBjB,EAAQ,IAAMC,EAAM,CAAEiB,OAAQ,CAAEC,OAAQjB,KAD9C,OAC1CS,EAD0CE,EAAAO,KAGhDV,EAAS,CACLW,KCPsB,iBDQtBC,QAASX,EAAYY,OALuB,wBAAAV,EAAAW,SAAAf,EAAAgB,SAAvB,gBAAAC,GAAA,OAAAvB,EAAAwB,MAAAF,KAAAG,YAAA,IAShBC,EAAgB,SAACC,GAAD,sBAAAC,EAAA3B,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAe,SAAAwB,EAAOtB,GAAP,OAAAJ,EAAAC,EAAAK,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,WACxCe,EADwC,CAAAG,EAAAlB,KAAA,eAAAkB,EAAAlB,KAAA,EAEpCC,IAAMkB,OAAO,gBAAkBJ,GAFK,OAAAG,EAAAlB,KAAA,eAI1CoB,QAAQC,IAAI,kDAJ8B,wBAAAH,EAAAT,SAAAQ,EAAAP,SAAf,gBAAAY,GAAA,OAAAN,EAAAJ,MAAAF,KAAAG,YAAA,IAQhBU,EAAc,SAACtC,EAAOC,GAAR,sBAAAsC,EAAAnC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAiB,SAAAgC,EAAO9B,GAAP,IAAA+B,EAAA,OAAAnC,EAAAC,EAAAK,KAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,cAAA2B,EAAA3B,KAAA,EACZC,IAAMC,IAAI,uBAAyBjB,EAAQ,IAAMC,GADrC,OAClCwC,EADkCC,EAAAtB,KAGxCV,EAAS,CACLW,KCvBoB,eDwBpBC,QAASmB,EAAclB,OALa,wBAAAmB,EAAAlB,SAAAgB,EAAAf,SAAjB,gBAAAkB,GAAA,OAAAJ,EAAAZ,MAAAF,KAAAG,YAAA,IASdgB,EAAa,iCAAAC,EAAAzC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAM,SAAAsC,EAAOpC,GAAP,IAAAqC,EAAA,OAAAzC,EAAAC,EAAAK,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,cAAAiC,EAAAjC,KAAA,EACDC,IAAMC,IAAI,cADT,OACtB8B,EADsBC,EAAA5B,KAG5BV,EAAS,CACLW,KC/BmB,cDgCnBC,QAASyB,EAAaxB,OALE,wBAAAyB,EAAAxB,SAAAsB,EAAArB,SAAN,gBAAAwB,GAAA,OAAAJ,EAAAlB,MAAAF,KAAAG,YAAA,IASbsB,EAAU,SAACC,GAAD,sBAAAC,EAAAhD,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAU,SAAA6C,EAAO3C,GAAP,OAAAJ,EAAAC,EAAAK,KAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,WAC1BoC,EAD0B,CAAAG,EAAAvC,KAAA,eAAAuC,EAAAvC,KAAA,EAEnBC,IAAMuC,IAAI,aAAc,CAAEJ,SAFP,OAAAG,EAAAvC,KAAA,eAIzBoB,QAAQC,IAAI,mDAJa,wBAAAkB,EAAA9B,SAAA6B,EAAA5B,SAAV,gBAAA+B,GAAA,OAAAJ,EAAAzB,MAAAF,KAAAG,YAAA,qBElCjB6B,cACF,SAAAA,EAAAtD,GAA6B,IAAAuD,EAAf1D,EAAeG,EAAfH,MAAOC,EAAQE,EAARF,KAAQ,OAAAG,OAAAuD,EAAA,EAAAvD,CAAAqB,KAAAgC,IACzBC,EAAAtD,OAAAwD,EAAA,EAAAxD,CAAAqB,KAAArB,OAAAyD,EAAA,EAAAzD,CAAAqD,GAAAK,KAAArC,QACKsC,MAAQ,CAAE/D,QAAOC,QAFGyD,mFAKzBjC,KAAKuC,MAAM1B,aAAY,IAAI2B,MAAOC,WAAa,GAAG,IAAID,MAAOE,gDAG7D,OACLC,EAAA7D,EAAA8D,cAAA,OAAKC,UAAU,sBACdF,EAAA7D,EAAA8D,cAAA,OAAKC,UAAU,gBACdF,EAAA7D,EAAA8D,cAAA,WACCD,EAAA7D,EAAA8D,cAAA,OAAKE,MAAO,CAAEC,QAAS,eAAgBC,MAAO,UAA9C,UACAL,EAAA7D,EAAA8D,cAAA,OAAKE,MAAO,CAAEG,UAAW,QAASD,MAAO,OAAQD,QAAS,iBACvD,IAAIG,KAAKC,aAAa,QAAS,CAAEL,MAAO,WAAYM,SAAU,QAAQC,OAAOrD,KAAKuC,MAAMe,OAAOC,SAGnGZ,EAAA7D,EAAA8D,cAAA,WACCD,EAAA7D,EAAA8D,cAAA,OAAKE,MAAO,CAAEC,QAAS,eAAgBC,MAAO,UAA9C,cACAL,EAAA7D,EAAA8D,cAAA,OAAKE,MAAO,CAAEG,UAAW,QAASD,MAAO,OAAQD,QAAS,iBACvD,IAAIG,KAAKC,aAAa,QAAS,CAAEL,MAAO,WAAYM,SAAU,QAAQC,OAAOrD,KAAKuC,MAAMe,OAAOE,sBArBnFC,aAkCNC,kBAJf,SAAApD,GACI,MAAO,CAAEgD,OADwBhD,EAAVgD,SAIa,CAAEzC,eAA3B6C,CAA0C1B,GC/BnD2B,cACF,SAAAA,IAAc,IAAA1B,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAqB,KAAA2D,IACV1B,EAAAtD,OAAAwD,EAAA,EAAAxD,CAAAqB,KAAArB,OAAAyD,EAAA,EAAAzD,CAAAgF,GAAAtB,KAAArC,QAWJ4D,kBAAoB,WAChB3B,EAAKM,MAAMjE,cAAc2D,EAAKK,MAAM/D,MAAO0D,EAAKK,MAAM9D,KAAMyD,EAAKK,MAAM7D,OAb7DwD,EAgBd4B,WAAa,SAACC,GAEV,OADmB,IAAItB,KAAKA,KAAKuB,MAAMD,IACrBE,gBAlBR/B,EAqBdgC,gBArBc,eAAAvF,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAqBI,SAAAC,EAAOkF,GAAP,OAAArF,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACR2C,EAAKM,MAAMnC,cAAc8D,GADjB,OAEdjC,EAAKkC,SAAQ,GAFC,wBAAA/E,EAAAW,SAAAf,EAAAgB,SArBJ,gBAAAC,GAAA,OAAAvB,EAAAwB,MAAAF,KAAAG,YAAA,GAAA8B,EA0BdmC,UA1BczF,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA0BF,SAAAwB,IAAA,IAAA8D,EAAAC,EAAA,OAAAzF,EAAAC,EAAAK,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cACJ+E,GAAgB,EAChBC,EAAcrC,EAAKK,MAAM9D,KACL,KAArByD,EAAKK,MAAM/D,OACV8F,EAAe,EACfC,EAAcrC,EAAKK,MAAM9D,KAAO,GAEhC6F,EAAepC,EAAKK,MAAM/D,MAAQ,EAP9BiC,EAAAlB,KAAA,EASF2C,EAAKsC,SAAS,CAChBhG,MAAO8F,EACP7F,KAAM8F,EACNE,SAAS,IAZL,OAcRvC,EAAKkC,SAAQ,GAdL,wBAAA3D,EAAAT,SAAAQ,EAAAP,SA1BEiC,EA2CdwC,cA3Cc9F,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA2CE,SAAAgC,IAAA,IAAAsD,EAAAC,EAAA,OAAAzF,EAAAC,EAAAK,KAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,cACR+E,GAAgB,EAChBC,EAAcrC,EAAKK,MAAM9D,KACL,IAArByD,EAAKK,MAAM/D,OACV8F,EAAe,GACfC,EAAcrC,EAAKK,MAAM9D,KAAO,GAEhC6F,EAAepC,EAAKK,MAAM/D,MAAQ,EAP1B0C,EAAA3B,KAAA,EAUN2C,EAAKsC,SAAS,CAChBhG,MAAO8F,EACP7F,KAAM8F,EACNE,SAAS,IAbD,OAeZvC,EAAKkC,SAAQ,GAfD,wBAAAlD,EAAAlB,SAAAgB,EAAAf,SA3CFiC,EAkEjBxD,KAlEiBE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAkEV,SAAAsC,IAAA,IAAA3B,EAAA,OAAAb,EAAAC,EAAAK,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,cACAI,EAASuC,EAAKyC,WAAWC,QAAQC,MADjCrD,EAAAjC,KAAA,EAEA2C,EAAKsC,SAAS,CACnB9F,KAAMiB,EACN8E,SAAS,IAJJ,OAMNvC,EAAKkC,SAAQ,GANP,wBAAA5C,EAAAxB,SAAAsB,EAAArB,SAlEUiC,EAiFdkC,QAjFc,eAAAxC,EAAAhD,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAiFJ,SAAA6C,EAAOiD,GAAP,OAAAhG,EAAAC,EAAAK,KAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,WACTuF,EADS,CAAAhD,EAAAvC,KAAA,eAAAuC,EAAAvC,KAAA,EAELwF,QAAQC,IAAI,CACjB9C,EAAKM,MAAMjE,cAAc2D,EAAKK,MAAM/D,MAAO0D,EAAKK,MAAM9D,KAAMyD,EAAKK,MAAM7D,MACvEwD,EAAKM,MAAM1B,YAAYoB,EAAKK,MAAM/D,MAAO0D,EAAKK,MAAM9D,QAJ1C,OAAAqD,EAAAvC,KAAA,eAOX2C,EAAKM,MAAMjE,cAAc2D,EAAKK,MAAM/D,MAAO0D,EAAKK,MAAM9D,KAAMyD,EAAKK,MAAM7D,MAP5D,OASNwD,EAAKsC,SAAS,CAAEC,SAAS,IATnB,wBAAA3C,EAAA9B,SAAA6B,EAAA5B,SAjFI,gBAAAY,GAAA,OAAAe,EAAAzB,MAAAF,KAAAG,YAAA,GAAA8B,EA6Fd+C,eAAiB,WACnB,OAAG/C,EAAKM,MAAM0C,QAAQC,SACdjD,EAAKM,MAAM0C,QAAQC,SAASC,IAAI,SAACF,GACvC,OACCtC,EAAA7D,EAAA8D,cAAA,OAAKC,UAAU,oBAAoBuC,IAAMH,EAAQI,KAChD1C,EAAA7D,EAAA8D,cAAA,OAAKC,UAAU,gBACdF,EAAA7D,EAAA8D,cAAA,QAAMC,UAAU,cAAeoC,EAAQrF,MACvC+C,EAAA7D,EAAA8D,cAAA,SAAKX,EAAK4B,WAAWoB,EAAQnB,OAC7BnB,EAAA7D,EAAA8D,cAAA,SAAK,IAAIM,KAAKC,aAAa,QAAS,CAAEL,MAAO,WAAYM,SAAU,QAAQC,OAAO4B,EAAQL,QAC1FjC,EAAA7D,EAAA8D,cAAA,KAAGE,MAAO,CAAEwC,OAAQ,QAASC,SAAU,SAAYN,EAAQO,cAE5D7C,EAAA7D,EAAA8D,cAAA,OAAKC,UAAU,eACdF,EAAA7D,EAAA8D,cAAA,UAAQC,UAAU,yBAAyBC,MAAO,CAAE2C,WAAY,QAC/DC,QAAU,kBAAMzD,EAAKgC,gBAAgBgB,EAAQI,OAE7C1C,EAAA7D,EAAA8D,cAAA,KAAGC,UAAU,wBAAb,WAEDF,EAAA7D,EAAA8D,cAAC+C,EAAA,EAAD,CAAMC,GAAK,CAAEC,SAAU,gBAAiBvD,MAAO2C,GAAWpC,UAAU,0BACnEF,EAAA7D,EAAA8D,cAAA,KAAGC,UAAU,wBAAb,aAOE,IAtHQZ,EAyHd6D,OAAQ,WACJ,OACInD,EAAA7D,EAAA8D,cAAA,WACID,EAAA7D,EAAA8D,cAAA,OAAKC,UAAU,OACXF,EAAA7D,EAAA8D,cAAA,UAAQC,UAAU,eAAe6C,QAAUzD,EAAKwC,eAC5C9B,EAAA7D,EAAA8D,cAAA,KAAGC,UAAU,kBAAb,wBAEJF,EAAA7D,EAAA8D,cAAA,UAAQC,UAAU,gBAAgB6C,QAAUzD,EAAKmC,WAC7CzB,EAAA7D,EAAA8D,cAAA,KAAGC,UAAU,kBAAb,yBAEJF,EAAA7D,EAAA8D,cAAA,MAAIC,UAAU,mBAAoBkD,IAAO,IAAIvD,KAAUP,EAAKK,MAAM/D,MAAQ,OAAS0D,EAAKK,MAAM9D,OAAO6E,OAAO,QAA5G,KAAyHpB,EAAKK,MAAM9D,OAEtIyD,EAAKK,MAAMkC,QAAU7B,EAAA7D,EAAA8D,cAAA,OAAKC,UAAU,YAAWF,EAAA7D,EAAA8D,cAAA,OAAKC,UAAU,mBAA+B,KAC/FF,EAAA7D,EAAA8D,cAAA,OAAKC,UAAYZ,EAAKK,MAAMkC,QAAU,OAAS,IAC1D7B,EAAA7D,EAAA8D,cAAA,OAAKoD,MAAM,OACVrD,EAAA7D,EAAA8D,cAACqD,EAAD,CAAe1H,MAAQ0D,EAAKK,MAAM/D,MAAQC,KAAOyD,EAAKK,MAAM9D,OAC5DmE,EAAA7D,EAAA8D,cAAA,OAAKC,UAAU,4BACdF,EAAA7D,EAAA8D,cAAA,UAAQE,MAAO,CAAEC,QAAS,SAAW6B,MAAQ3C,EAAKK,MAAM7D,KAAOyH,IAAMjE,EAAKyC,WAAayB,SAAWlE,EAAKxD,MACtGkE,EAAA7D,EAAA8D,cAAA,UAAQgC,MAAM,YAAd,uBACAjC,EAAA7D,EAAA8D,cAAA,UAAQgC,MAAM,aAAd,uBACAjC,EAAA7D,EAAA8D,cAAA,UAAQgC,MAAM,aAAd,uBACAjC,EAAA7D,EAAA8D,cAAA,UAAQgC,MAAM,cAAd,0BAIYjC,EAAA7D,EAAA8D,cAAA,OAAKC,UAAU,OACTZ,EAAK+C,iBACPrC,EAAA7D,EAAA8D,cAAA,OAAKC,UAAU,oBACXF,EAAA7D,EAAA8D,cAAC+C,EAAA,EAAD,CAAMC,GAAG,eAAe/C,UAAU,oCAC9BF,EAAA7D,EAAA8D,cAAA,KAAGC,UAAU,kBAAb,aApJ9BZ,EAAKyC,WAAa0B,IAAMC,YACxBpE,EAAKqE,aAAeF,IAAMC,YACpBpE,EAAKK,MAAQ,CACT/D,OAAO,IAAIiE,MAAOC,WAAa,EAC/BjE,MAAM,IAAIgE,MAAOE,cAC1BjE,KAAM,WACG+F,SAAS,GARHvC,6BADQwB,aAqKXC,kBAJf,SAAA6C,GACI,MAAO,CAAEtB,QADyBsB,EAAXtB,UAIa,CAAE3G,gBAAeuC,cAAaT,iBAAvDsD,CAAwEC,GCjKxE6C,EARF,WACZ,OACC7D,EAAA7D,EAAA8D,cAAA,WACCD,EAAA7D,EAAA8D,cAAC6D,EAAD,+ECCGC,cACF,SAAAA,IAAc,IAAAzE,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAqB,KAAA0G,IACVzE,EAAAtD,OAAAwD,EAAA,EAAAxD,CAAAqB,KAAArB,OAAAyD,EAAA,EAAAzD,CAAA+H,GAAArE,KAAArC,QAKJ4D,kBAAoB,WAChB3B,EAAKM,MAAMpB,cAPDc,EAUd0E,mBAAqB,WACjBC,IAAYC,YAXF5E,EAcd6E,aAAe,WACX7E,EAAKsC,SAAS,CACVwC,MAAM,KAhBA9E,EAoBd+E,cAAgB,WACZ/E,EAAKsC,SAAS,CACVwC,MAAM,KAtBA9E,EA0BdgF,UA1BctI,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA0BF,SAAAC,IAAA,IAAAkI,EAAA,OAAArI,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YACF4H,EAAWC,SAASC,eAAe,YAAYxC,OAD7C,CAAAxF,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAIE2C,EAAKM,MAAMd,QAAQyF,GAJrB,OAKJjF,EAAKM,MAAMpB,aALP,OAORc,EAAKsC,SAAS,CAAEwC,MAAM,IAPd,wBAAA3H,EAAAW,SAAAf,EAAAgB,SA1BEiC,EAoCdoF,kBAAoB,WAChB,OACI1E,EAAA7D,EAAA8D,cAAC0E,EAAA,EAAD,CACIP,KAAO9E,EAAKK,MAAMyE,MAElBpE,EAAA7D,EAAA8D,cAAC0E,EAAA,EAAD,iBACA3E,EAAA7D,EAAA8D,cAAC0E,EAAA,EAAD,KACI3E,EAAA7D,EAAA8D,cAAA,SAAOhD,KAAK,OAAOsE,GAAG,WAAWqD,aAAa,SAElD5E,EAAA7D,EAAA8D,cAAC0E,EAAA,EAAD,KACI3E,EAAA7D,EAAA8D,cAAC0E,EAAA,EAAD,CACI5B,QAAUzD,EAAK+E,eADnB,UAKArE,EAAA7D,EAAA8D,cAAC0E,EAAA,EAAD,CACI5B,QAAUzD,EAAKgF,WADnB,UAnDFhF,EA6DduF,cAAgB,WACZ,OAAOC,IAAEtC,IAAIlD,EAAKM,MAAMmF,MAAO,SAAApH,GAAc,IAAXoB,EAAWpB,EAAXoB,KAC9B,OAAOiB,EAAA7D,EAAA8D,cAAA,UAAQwC,IAAM1D,EAAOkD,MAAQlD,GAASA,MA/DvCO,EAmEd6D,OAAS,WACL,OACInD,EAAA7D,EAAA8D,cAAA,WACMX,EAAKoF,oBACP1E,EAAA7D,EAAA8D,cAAA,OAAKC,UAAU,OACXF,EAAA7D,EAAA8D,cAAA,OAAKE,MAAO,CAAE6E,QAAS,KAAO9E,UAAU,sBACpCF,EAAA7D,EAAA8D,cAAA,SAAYX,EAAKM,MAAMqF,MACnBjF,EAAA7D,EAAA8D,cAAA,UAAQgC,MAAM,IAAd,iBACE3C,EAAKuF,iBAETvF,EAAKM,MAAMsF,KAAKC,SAAW7F,EAAKM,MAAMsF,KAAKE,OAASpF,EAAA7D,EAAA8D,cAAA,WAAKD,EAAA7D,EAAA8D,cAAA,QAAMC,UAAU,YAAaZ,EAAKM,MAAMsF,KAAKE,SAE5GpF,EAAA7D,EAAA8D,cAAA,UAAQE,MAAO,CAAEkF,SAAU,WAAYC,IAAK,OAAQC,KAAM,QAAUrF,UAAU,eAAe6C,QAAUzD,EAAK6E,aAAelH,KAAK,UAAhI,WAEI+C,EAAA7D,EAAA8D,cAAA,KAAGC,UAAU,uBAAb,WA/EhBZ,EAAKK,MAAQ,CACTyE,MAAM,GAHA9E,6BADKwB,aA8FRC,kBAJf,SAAA5C,GACI,MAAO,CAAE4G,MADuB5G,EAAT4G,QAIa,CAAEvG,aAAYM,WAAvCiC,CAAkDgD,GC9F3DyB,cACF,SAAAA,IAAc,IAAAlG,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAqB,KAAAmI,IACVlG,EAAAtD,OAAAwD,EAAA,EAAAxD,CAAAqB,KAAArB,OAAAyD,EAAA,EAAAzD,CAAAwJ,GAAA9F,KAAArC,QAKJ4D,kBAAoB,WACtB,IAAIwE,EAAY,GACPnG,EAAKM,MAAM0C,SACVmD,EAAYnG,EAAKM,MAAM0C,SACbnB,KAAOiC,IAAOqC,EAAUtE,MAAMT,OAAO,cAExD+E,EAAUtE,KAAOuE,EAAgB,IAAI7F,MAEhCP,EAAKM,MAAM+F,WAAWF,IAdZnG,EAkBd6E,aAAe,WACX7E,EAAKsC,SAAS,CAAEwC,MAAM,KAnBZ9E,EAsBd+E,cAAgB,WACZ/E,EAAKsC,SAAS,CAAEwC,MAAM,KAvBZ9E,EA0BdsG,aAAe,WACX,OACI5F,EAAA7D,EAAA8D,cAAA,WACID,EAAA7D,EAAA8D,cAAC4F,EAAA,EAAD,CAAOpD,IAAI,QAAQ1D,KAAK,QAAQ+G,MAAM,SAASC,UAAWC,IAC1DhG,EAAA7D,EAAA8D,cAAC4F,EAAA,EAAD,CAAOpD,IAAI,OAAO1D,KAAK,OAAO+G,MAAM,OAAOC,UAAWhC,EAAUI,aAAe7E,EAAK6E,eACpFnE,EAAA7D,EAAA8D,cAAC4F,EAAA,EAAD,CAAOpD,IAAI,OAAO1D,KAAK,OAAO+G,MAAM,OAAOC,UAAWE,IACtDjG,EAAA7D,EAAA8D,cAAC4F,EAAA,EAAD,CAAOpD,IAAI,cAAc1D,KAAK,cAAc+G,MAAM,cAAcC,UAAWC,MAhCzE1G,EAqCd6D,OAAS,WACL,OACInD,EAAA7D,EAAA8D,cAAA,WACID,EAAA7D,EAAA8D,cAAA,QAAMiG,SAAW5G,EAAKM,MAAMuG,aAAa7G,EAAKM,MAAMwG,kBAC9C9G,EAAKsG,eACP5F,EAAA7D,EAAA8D,cAAC+C,EAAA,EAAD,CAAM7C,MAAO,CAAEkG,UAAW,OAAQC,OAAQ,MAAQrD,GAAG,IAAI/C,UAAU,oDAAnE,SAEIF,EAAA7D,EAAA8D,cAAA,KAAGC,UAAU,uBAAb,WAEJF,EAAA7D,EAAA8D,cAAA,UAAQE,MAAO,CAAEkG,UAAW,QAAUnG,UAAU,oDAAoDjD,KAAK,UAAzG,SAEI+C,EAAA7D,EAAA8D,cAAA,KAAGC,UAAU,uBAAb,YA9ChBZ,EAAKK,MAAQ,CACTyE,MAAM,GAHA9E,6BADQwB,aA0DpBkF,EAAkB,SAAAjK,GAA+C,IAA5CkJ,EAA4ClJ,EAA5CkJ,MAAOa,EAAqC/J,EAArC+J,MAAqCS,EAAAxK,EAA9BmJ,KAAQC,EAAsBoB,EAAtBpB,QAASC,EAAamB,EAAbnB,MACtD,OACIpF,EAAA7D,EAAA8D,cAAA,WACID,EAAA7D,EAAA8D,cAAA,aAAS6F,GACT9F,EAAA7D,EAAA8D,cAAA,QAAAjE,OAAAwK,OAAA,GAAWvB,EAAX,CAAkBhI,KAAK,OAAO2H,aAAa,SACzCO,GAAWC,GAASpF,EAAA7D,EAAA8D,cAAA,QAAMC,UAAU,YAAakF,KAKzDa,EAAwB,SAAAtI,GAAwC,IAArCsH,EAAqCtH,EAArCsH,MAAqCwB,EAAA9I,EAA9BuH,KAAQC,EAAsBsB,EAAtBtB,QAASC,EAAaqB,EAAbrB,MACrD,OACIpF,EAAA7D,EAAA8D,cAAA,WACID,EAAA7D,EAAA8D,cAACyG,EAAA,EAAD1K,OAAAwK,OAAA,GACQvB,EADR,CAEI0B,SAAW1B,EAAMhD,MAAQ,IAAIpC,KAAKA,KAAKuB,MAAM6D,EAAMhD,QAAU,IAAIpC,KACjEoC,MAAQgD,EAAMhD,MAAQyD,EAAgBT,EAAMhD,OAASyD,EAAgB,IAAI7F,MACzE+G,gBAAgB,gBAChBC,WAAW,aACXjC,aAAa,SAEfO,GAAWC,GAASpF,EAAA7D,EAAA8D,cAAA,WAAKD,EAAA7D,EAAA8D,cAAA,QAAMC,UAAU,YAAakF,MAK9DM,EAAkB,SAACvE,GACrB,GAAkB,iBAARA,EACN,OAAOA,EAEX,IAAM2F,EAAa1D,IAAOjC,GAAM4F,SAChC,OAAO3D,IAAO0D,GAAYpG,OAAO,eAmBtBsG,cAAU,CACrBC,SAjBa,SAACC,GACd,IAAMC,EAAU,GAYhB,OAVID,EAAOjF,QACPkF,EAAOlF,MAAQ,4BAEfiF,EAAOjK,OACPkK,EAAOlK,KAAO,wBAEdiK,EAAO/F,OACPgG,EAAOhG,KAAO,yBAGXgG,GAKPC,KAAM,eAFKJ,CAGZxB,GCjHG6B,gOACkBH,4FAENtK,IAAMuC,IAAI,eAAgB+H,yDAEhCI,MAAM,2BAAA7K,EAAA8K,WAEVlK,KAAKuC,MAAM4H,QAAQC,KAAK,iJAGlB,IAAAnI,EAAAjC,KACN,OACI2C,EAAA7D,EAAA8D,cAAA,WACID,EAAA7D,EAAA8D,cAAA,MAAIC,UAAU,YAAd,wBACAF,EAAA7D,EAAA8D,cAACyH,EAAD,CAAatB,gBAAoB,SAACc,GAAD,OAAY5H,EAAKqI,cAAcT,cAdvDpG,aAoBVkG,cAAU,CACrBI,KAAM,eADKJ,CAEZK,GCHYO,gOAnBSV,4FAENtK,IAAMiL,KAAK,gBAAkBX,EAAOxE,IAAKwE,yDAE/CI,MAAM,2BAAA7K,EAAA8K,WAEVlK,KAAKuC,MAAM4H,QAAQC,KAAK,iJAGnB,IAAAnI,EAAAjC,KACL,OACI2C,EAAA7D,EAAA8D,cAAA,WACID,EAAA7D,EAAA8D,cAAA,MAAIC,UAAU,YAAd,gBACAF,EAAA7D,EAAA8D,cAACyH,EAAD,CAAatB,gBAAoB,SAACc,GAAD,OAAY5H,EAAKwI,cAAcZ,IAAU5E,QAAUjF,KAAKuC,MAAMmI,SAASpI,gBAd9FmB,aCKpBkH,mLAEE,OACIhI,EAAA7D,EAAA8D,cAAC+C,EAAA,EAAD,KACIhD,EAAA7D,EAAA8D,cAAA,OAAKC,UAAU,aACXF,EAAA7D,EAAA8D,cAACgI,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACpC,UAAWlC,IACjC7D,EAAA7D,EAAA8D,cAACgI,EAAA,EAAD,CAAOC,KAAK,eAAenC,UAAWsB,IACtCrH,EAAA7D,EAAA8D,cAACgI,EAAA,EAAD,CAAOC,KAAK,gBAAgBnC,UAAW6B,aAPzC9G,aAcHC,eAAQ,KAAMqH,EAAdrH,CAAuBiH,aCjBtBK,eAAgB,CAC5B/F,QCLW,WAA8B,IAApB3C,EAAoBnC,UAAA8K,OAAA,QAAAC,IAAA/K,UAAA,GAAAA,UAAA,GAAZ,GAAIgL,EAAQhL,UAAA8K,OAAA,EAAA9K,UAAA,QAAA+K,EACzC,OAAOC,EAAOvL,MACV,IVJsB,iBUKlB,OAAOuL,EAAOtL,QAClB,QACI,OAAOyC,IDCfgB,OENW,WAA8B,IAApBhB,EAAoBnC,UAAA8K,OAAA,QAAAC,IAAA/K,UAAA,GAAAA,UAAA,GAAZ,GAAIgL,EAAQhL,UAAA8K,OAAA,EAAA9K,UAAA,QAAA+K,EACzC,OAAOC,EAAOvL,MACV,IXHoB,eWIhB,OAAOuL,EAAOtL,QAClB,QACI,OAAOyC,IFEfyH,KAAMqB,KACN1D,MGRW,WAA8B,IAApBpF,EAAoBnC,UAAA8K,OAAA,QAAAC,IAAA/K,UAAA,GAAAA,UAAA,GAAZ,GAAIgL,EAAQhL,UAAA8K,OAAA,EAAA9K,UAAA,QAAA+K,EACzC,OAAOC,EAAOvL,MACV,IZFmB,cYGf,OAAOuL,EAAOtL,QAClB,QACI,OAAOyC,MCIb+I,GAAQC,YAAYC,GAAU,GAAIC,YAAgBC,MAExDC,IAAS5F,OACLnD,EAAA7D,EAAA8D,cAAC+I,EAAA,EAAD,CAAUN,MAAOA,IAAjB,IAAyB1I,EAAA7D,EAAA8D,cAACgJ,GAAD,MAAzB,KACAzE,SAAS0E,cAAc","file":"static/js/main.49fca1fc.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { FETCH_EXPENSES, FETCH_TOTALS, FETCH_TYPES } from './types';\r\n\r\nexport const fetchExpenses = (month, year, sort) => async (dispatch) => {\r\n    const expenseList = await axios.get('/api/expense/' + month + '/' + year, { params: { sortBy: sort }});\r\n\t\r\n    dispatch({\r\n        type: FETCH_EXPENSES,\r\n        payload: expenseList.data\r\n    });\r\n};\r\n\r\nexport const deleteExpense = (expenseId) => async (dispatch) => {\r\n\tif(expenseId) {\r\n\t\tawait axios.delete('/api/expense/' + expenseId);\r\n\t} else {\r\n\t\tconsole.log(\"No ID supplied to deleteExpense. Doing nothing\");\r\n\t}\r\n};\r\n\r\nexport const fetchTotals = (month, year) => async (dispatch) => {\r\n    const expenseTotals = await axios.get('/api/expense/totals/' + month + '/' + year);\r\n\r\n    dispatch({\r\n        type: FETCH_TOTALS,\r\n        payload: expenseTotals.data\r\n    });\r\n};\r\n\r\nexport const fetchTypes = () => async (dispatch) => {\r\n    const expenseTypes = await axios.get('/api/types');\r\n\r\n    dispatch({\r\n        type: FETCH_TYPES,\r\n        payload: expenseTypes.data\r\n    })\r\n};\r\n\r\nexport const addType = (name) => async (dispatch) => {\r\n    if(name) {\r\n        await axios.put('/api/types', { name });\r\n    } else {\r\n        console.log(\"No type name supplied to addType. Doing nothing\");\r\n    }\r\n};","export const FETCH_EXPENSES = 'fetch_expenses';\r\nexport const FETCH_TOTALS = 'fetch_totals';\r\nexport const FETCH_TYPES = 'fetch_types';","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchTotals } from '../actions';\r\n\r\nclass Totals extends Component {\r\n    constructor({ month, year }) {\r\n        super();\r\n        this.state = { month, year }\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchTotals(new Date().getMonth() + 1, new Date().getFullYear());\r\n    }\r\n    render() {\r\n        return (\r\n\t\t\t<div className=\"card col s12 m6 l6\">\r\n\t\t\t\t<div className=\"card-content\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div style={{ display: 'inline-block', width: '120px' }}>Total:</div>\r\n\t\t\t\t\t\t<div style={{ textAlign: 'right', width: '60px', display: 'inline-block' }}>\r\n\t\t\t\t\t\t\t{ new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD'}).format(this.props.totals.total) }\r\n\t\t\t\t\t\t</div>                             \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div style={{ display: 'inline-block', width: '120px' }}>Remaining:</div>\r\n\t\t\t\t\t\t<div style={{ textAlign: 'right', width: '60px', display: 'inline-block' }}>\r\n\t\t\t\t\t\t\t{ new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD'}).format(this.props.totals.remaining) }\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ totals }) {\r\n    return { totals };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchTotals })(Totals);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchExpenses, fetchTotals, deleteExpense } from '../actions';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'moment';\r\nimport ExpenseTotals from './ExpenseTotals';\r\n\r\nclass ExpenseList extends Component {\r\n    constructor() {\r\n        super();\r\n\t\tthis.sortSelect = React.createRef();\r\n\t\tthis.filterSelect = React.createRef();\r\n        this.state = {\r\n            month: new Date().getMonth() + 1,\r\n            year: new Date().getFullYear(),\r\n\t\t\tsort: 'date asc',\r\n            loading: false\t\t\t\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.fetchExpenses(this.state.month, this.state.year, this.state.sort);\r\n    }\r\n\r\n    formatDate = (date) => {        \r\n        const parsedDate = new Date(Date.parse(date));\r\n        return parsedDate.toDateString();\r\n    }\r\n\r\n    onDeleteExpense = async (id) => {\r\n        await this.props.deleteExpense(id);\r\n        this.refresh(true);\r\n    }\r\n\r\n    nextMonth = async () => {\r\n        var updatedMonth = -1;\r\n        var updatedYear = this.state.year;\r\n        if(this.state.month === 12){\r\n            updatedMonth = 1;\r\n            updatedYear = this.state.year + 1;\r\n        } else {\r\n            updatedMonth = this.state.month + 1;\r\n        }\r\n        await this.setState({\r\n            month: updatedMonth,\r\n            year: updatedYear,\r\n            loading: true\r\n        });\r\n        this.refresh(true);\r\n    }\r\n\r\n    previousMonth = async () => {\r\n        var updatedMonth = -1;\r\n        var updatedYear = this.state.year;\r\n        if(this.state.month === 1){\r\n            updatedMonth = 12;\r\n            updatedYear = this.state.year - 1;\r\n        } else {\r\n            updatedMonth = this.state.month - 1;\r\n        }\r\n\r\n        await this.setState({\r\n            month: updatedMonth,\r\n            year: updatedYear,\r\n            loading: true\r\n        });\r\n        this.refresh(true);\r\n    }\r\n\t\r\n\t/**\r\n\t  * Responds to sort selection events by the user. Causes the expense\r\n\t  * list to be refreshed.\r\n\t  *\r\n\t  */\r\n\tsort = async () => {\r\n\t\tconst sortBy = this.sortSelect.current.value;\r\n\t\tawait this.setState({\r\n\t\t\tsort: sortBy,\r\n\t\t\tloading: true\r\n\t\t});\r\n\t\tthis.refresh(false);\r\n\t}\r\n\r\n\t/* \r\n\t * Causes this component to refresh its data from the server (expense list and totals).\r\n\t *\r\n     * @param refreshTotals - Whether or not to refresh the totals area\t\r\n\t * \r\n\t */\r\n    refresh = async (refreshTotals) => {\r\n\t\tif(refreshTotals) {\r\n\t\t\tawait Promise.all([\r\n\t\t\t\tthis.props.fetchExpenses(this.state.month, this.state.year, this.state.sort),\r\n\t\t\t\tthis.props.fetchTotals(this.state.month, this.state.year)\r\n\t\t\t]);\r\n\t\t} else {\r\n\t\t\tthis.props.fetchExpenses(this.state.month, this.state.year, this.state.sort);\r\n\t\t}\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    renderExpenses = () => {\r\n\t\tif(this.props.expense.expenses) {\r\n\t\t\treturn this.props.expense.expenses.map((expense) => {\r\n\t\t\t\treturn ( \r\n\t\t\t\t\t<div className=\"card col s6 m4 l2\" key={ expense._id }>\r\n\t\t\t\t\t\t<div className=\"card-content\">\r\n\t\t\t\t\t\t\t<span className=\"card-title\">{ expense.type }</span>\r\n\t\t\t\t\t\t\t<p>{ this.formatDate(expense.date) }</p>\r\n\t\t\t\t\t\t\t<p>{ new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD'}).format(expense.value) }</p>\r\n\t\t\t\t\t\t\t<p style={{ height: '100px', overflow: 'auto' }}>{ expense.description }</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"card-action\">\r\n\t\t\t\t\t\t\t<button className=\"btn-floating red right\" style={{ marginLeft: \"10px\"}}\r\n\t\t\t\t\t\t\t\tonClick={ () => this.onDeleteExpense(expense._id) }\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className=\"material-icons right\">delete</i>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<Link to={ { pathname: \"/expense/edit\", state: expense }} className=\"btn-floating red right\">\r\n\t\t\t\t\t\t\t\t<i className=\"material-icons right\">edit</i>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n    }\r\n    render =() => {\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <button className=\"btn red left\" onClick={ this.previousMonth }>\r\n                        <i className=\"material-icons\">keyboard_arrow_left</i>\r\n                    </button>\r\n                    <button className=\"btn red right\" onClick={ this.nextMonth }>\r\n                        <i className=\"material-icons\">keyboard_arrow_right</i>\r\n                    </button>\r\n                    <h5 className=\"red-text center\">{ Moment(new Date(\"\" + this.state.month + \"/01/\" + this.state.year)).format('MMMM') }, { this.state.year }</h5>\r\n                </div>\r\n                { this.state.loading ? <div className=\"progress\"><div className=\"indeterminate\"></div></div> : null }\r\n                <div className={ this.state.loading ? 'hide' : ''}>     \r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<ExpenseTotals month={ this.state.month } year={ this.state.year } />\t\t\t\t\t\r\n\t\t\t\t\t\t<div className=\"input-field col s6 m4 l3\">\r\n\t\t\t\t\t\t\t<select style={{ display: 'block' }} value={ this.state.sort } ref={ this.sortSelect } onChange={ this.sort }>\r\n\t\t\t\t\t\t\t\t<option value=\"date asc\">Date (oldest first)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"date desc\">Date (newest first)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"value asc\">Value (low to high)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"value desc\">Value (high to low)</option>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n                    <div className=\"row\">\t\t\t\r\n                        { this.renderExpenses() }\r\n                        <div className=\"fixed-action-btn\">\r\n                            <Link to=\"/expense/new\" className=\"btn-floating btn-large red right\">\r\n                                <i className=\"material-icons\">add</i>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ expense }) {\r\n    return { expense };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchExpenses, fetchTotals, deleteExpense })(ExpenseList);","import React from 'react';\r\nimport ExpenseList from './ExpenseList';\r\n\r\nconst Home = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ExpenseList />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Materialize from 'materialize-css/dist/js/materialize.min';\r\nimport { fetchTypes, addType } from '../../actions';\r\nimport _ from 'lodash';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@material-ui/core';\r\n\r\nclass TypeList extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            open: false\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.props.fetchTypes();\r\n    }\r\n    \r\n    componentDidUpdate = () => {\r\n        Materialize.AutoInit();\r\n    }\r\n\r\n    onDialogOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        });\r\n    }\r\n\r\n    onDialogClose = () => {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n\r\n    onAddType = async () => {\r\n        const typeName = document.getElementById('typeName').value;\r\n        \r\n        if(typeName) {\r\n            await this.props.addType(typeName);\r\n            this.props.fetchTypes();\r\n        }\r\n        this.setState({ open: false });\r\n    }\r\n\r\n    renderAddTypeForm = () => {\r\n        return (\r\n            <Dialog \r\n                open={ this.state.open }\r\n            >\r\n                <DialogTitle>Add Type</DialogTitle>\r\n                <DialogContent>\r\n                    <input type=\"text\" id=\"typeName\" autoComplete=\"off\" />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button \r\n                        onClick={ this.onDialogClose }\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={ this.onAddType }\r\n                    >\r\n                        Add                        \r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n    renderOptions = () => {\r\n        return _.map(this.props.types, ({ name }) => {\r\n            return <option key={ name } value={ name }>{ name }</option>\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n        return (      \r\n            <div>\r\n                { this.renderAddTypeForm() }\r\n                <div className=\"row\">  \r\n                    <div style={{ padding: \"0\" }} className=\"input-field col s3\"> \r\n                        <select {...this.props.input}>\r\n                            <option value=\"\">Select a type</option>\r\n                            { this.renderOptions() }\r\n                        </select>                    \r\n                        { this.props.meta.touched && this.props.meta.error && <div><span className=\"red-text\">{ this.props.meta.error }</span></div> }                    \r\n                    </div>    \r\n                    <button style={{ position: 'relative', top: '25px', left: '20px' }} className=\"btn left red\" onClick={ this.onDialogOpen } type=\"button\">\r\n                        Add type\r\n                        <i className=\"material-icons left\">add</i>\r\n                    </button>    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ types }) {\r\n    return { types };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchTypes, addType })(TypeList);","import React, { Component } from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker';\r\nimport Moment from 'moment';\r\nimport TypeList from './TypeList';\r\n\r\nclass ExpenseForm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n    componentDidMount = () => {\r\n\t\tvar initProps = {};\r\n        if(this.props.expense) {\r\n            initProps = this.props.expense;\r\n            initProps.date = Moment(initProps.date).format('MM-DD-YYYY');\r\n        } else {\r\n\t\t\tinitProps.date = formatDateValue(new Date());\r\n\t\t}\r\n        this.props.initialize(initProps);\r\n\r\n    }\r\n\r\n    onDialogOpen = () => {\r\n        this.setState({ open: true });\r\n    }\r\n\r\n    onDialogClose = () => {\r\n        this.setState({ open: false });\r\n    }\r\n\r\n    renderFields = () => {\r\n        return (\r\n            <div>\r\n                <Field key=\"value\" name=\"value\" label=\"Amount\" component={renderTextField} />\r\n                <Field key=\"type\" name=\"type\" label=\"Type\" component={TypeList} onDialogOpen={ this.onDialogOpen } />\r\n                <Field key=\"date\" name=\"date\" label=\"Date\" component={renderDatePickerField} />\r\n                <Field key=\"description\" name=\"description\" label=\"Description\" component={renderTextField} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <form onSubmit={ this.props.handleSubmit(this.props.onExpenseSubmit) }>\r\n                    { this.renderFields() }\r\n                    <Link style={{ marginTop: '20px', zIndex: \"-1\" }} to=\"/\" className=\"btn waves-effect waves-light white-text left red\">\r\n                        Cancel\r\n                        <i className=\"material-icons left\">cancel</i>\r\n                    </Link>\r\n                    <button style={{ marginTop: '20px' }} className=\"btn waves-effect waves-light white-text right red\" type=\"submit\">\r\n                        Submit\r\n                        <i className=\"material-icons left\">send</i>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst renderTextField = ({ input, label, meta: { touched, error }}) => {\r\n    return (\r\n        <div>\r\n            <label>{ label }</label>\r\n            <input {...input} type=\"text\" autoComplete=\"off\" />\r\n            { touched && error && <span className=\"red-text\">{ error }</span> }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst renderDatePickerField = ({ input, meta: { touched, error }}) => {\r\n    return (\r\n        <div>\r\n            <DatePicker\r\n                {...input}\r\n                selected={ input.value ? new Date(Date.parse(input.value)) : new Date() }\r\n                value={ input.value ? formatDateValue(input.value) : formatDateValue(new Date()) }\r\n                placeholderText=\"Select a date\" \r\n                dateFormat=\"MM-dd-YYYY\"\r\n                autoComplete=\"off\"\r\n            />            \r\n            { touched && error && <div><span className=\"red-text\">{ error }</span></div> }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst formatDateValue = (date) => {\r\n    if(typeof date == 'string'){\r\n        return date;\r\n    }\r\n    const parsedDate = Moment(date).toDate();\r\n    return Moment(parsedDate).format('MM-DD-YYYY');\r\n};\r\n\r\nconst validate = (values) => {\r\n    const errors =  {};\r\n\r\n    if(!values.value) {\r\n        errors.value = 'Please specify an amount';\r\n    }\r\n    if(!values.type) {\r\n        errors.type = 'Please select a type';\r\n    }\r\n    if(!values.date) {\r\n        errors.date = 'Please specify a date';\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\nexport default reduxForm({\r\n    validate,\r\n    form: 'expenseForm'\r\n})(ExpenseForm);","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { reduxForm } from 'redux-form';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nclass ExpenseNew extends Component {\r\n    async submitExpense(values) {\r\n        try{\r\n            await axios.put('/api/expense', values);\r\n        } catch(error) {\r\n            alert(\"Something bad happened! \" + error);\r\n        }\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <h5 className=\"red-text\">Create a new expense</h5>\r\n                <ExpenseForm onExpenseSubmit = { (values) => this.submitExpense(values) } />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default reduxForm({\r\n    form: 'expenseForm'\r\n})(ExpenseNew)","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nclass ExpenseEdit extends Component {\r\n    async updateExpense(values) {\r\n        try{\r\n            await axios.post('/api/expense/' + values._id, values);\r\n        } catch(error) {\r\n            alert(\"Something bad happened! \" + error);\r\n        }\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        return (         \r\n            <div>   \r\n                <h5 className=\"red-text\">Edit expense</h5>\r\n                <ExpenseForm onExpenseSubmit = { (values) => this.updateExpense(values) } expense={ this.props.location.state } />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExpenseEdit;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\n\r\nimport Home from './Home';\r\nimport ExpenseNew from './expense/ExpenseNew';\r\nimport ExpenseEdit from './expense/ExpenseEdit';\r\n\r\nclass App extends Component {    \r\n    render(){\r\n        return (\r\n            <BrowserRouter>\r\n                <div className=\"container\">\r\n                    <Route path=\"/\" exact component={Home} />\r\n                    <Route path=\"/expense/new\" component={ExpenseNew} />\r\n                    <Route path=\"/expense/edit\" component={ExpenseEdit} />\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, actions)(App);"," import { combineReducers } from 'redux';\r\n import expenseReducer from './expenseReducer';\r\n import totalsReducer from './totalsReducer';\r\n import typesReducer from './typesReducer';\r\n import { reducer as formReducer } from 'redux-form';\r\n\r\n export default combineReducers({\r\n    expense: expenseReducer,\r\n    totals: totalsReducer,\r\n    form: formReducer,\r\n    types: typesReducer\r\n });","import { FETCH_EXPENSES } from '../actions/types';\r\n\r\nexport default function (state = [], action) {\r\n    switch(action.type) {\r\n        case FETCH_EXPENSES:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};","import { FETCH_TOTALS } from '../actions/types';\r\n\r\nexport default function (state = {}, action) {\r\n    switch(action.type) {\r\n        case FETCH_TOTALS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};","import { FETCH_TYPES } from '../actions/types';\r\n\r\nexport default function (state = [], action) {\r\n    switch(action.type) {\r\n        case FETCH_TYPES:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};","import 'materialize-css/dist/css/materialize.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n    <Provider store={store}> <App /> </Provider>,\n    document.querySelector('#root')\n);\n"],"sourceRoot":""}