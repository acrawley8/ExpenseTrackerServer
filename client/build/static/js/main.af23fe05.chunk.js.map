{"version":3,"sources":["actions/index.js","actions/types.js","components/ExpenseTotals.js","components/ExpenseAggregate.js","components/ExpenseList.js","components/Home.js","components/expense/TypeList.js","components/expense/ExpenseForm.js","components/expense/ExpenseNew.js","components/expense/ExpenseEdit.js","components/App.js","reducers/index.js","reducers/expenseReducer.js","reducers/totalsReducer.js","reducers/typesReducer.js","reducers/aggregateReducer.js","index.js"],"names":["fetchExpenses","month","year","sort","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","expenseList","wrap","_context","prev","next","axios","get","params","sortBy","sent","type","payload","data","stop","this","_x","apply","arguments","deleteExpense","expenseId","_ref2","_callee2","_context2","delete","console","log","_x2","fetchTotals","_ref3","_callee3","expenseTotals","_context3","_x3","fetchAggregate","_ref4","_callee4","expenseAggregate","_context4","_x4","fetchTypes","_ref5","_callee5","expenseTypes","_context5","_x5","addType","name","_ref6","_callee6","_context6","put","_x6","Totals","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","props","Date","getMonth","getFullYear","react_default","createElement","className","style","display","width","textAlign","Intl","NumberFormat","currency","format","totals","total","remaining","Component","connect","Aggregate","openClose","setState","open","renderAggregates","aggregate","length","map","aggr","key","_id","id","onClick","ExpenseList","componentDidMount","formatDate","date","parse","toDateString","onDeleteExpense","refresh","nextMonth","updatedMonth","updatedYear","loading","previousMonth","sortSelect","current","value","refreshTotals","Promise","all","renderExpenses","expense","expenses","height","overflow","description","marginLeft","react_router_dom","to","pathname","render","Moment","ExpenseTotals","ref","onChange","ExpenseAggregate","React","createRef","filterSelect","Home","components_ExpenseList","TypeList","componentDidUpdate","Materialize","AutoInit","onDialogOpen","onDialogClose","onAddType","typeName","document","getElementById","renderAddTypeForm","index_es","autoComplete","renderOptions","_","types","padding","input","meta","touched","error","position","top","left","ExpenseForm","initProps","formatDateValue","initialize","renderFields","Field","label","component","renderTextField","renderDatePickerField","onSubmit","handleSubmit","onExpenseSubmit","marginTop","zIndex","_ref$type","_ref$meta","assign","_ref2$meta","react_datepicker_es","selected","placeholderText","dateFormat","parsedDate","toDate","reduxForm","validate","values","errors","form","ExpenseNew","alert","t0","history","push","expense_ExpenseForm","submitExpense","ExpenseEdit","post","updateExpense","location","App","react_router","path","exact","actions","combineReducers","undefined","action","formReducer","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","es","components_App","querySelector"],"mappings":"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","file":"static/js/main.af23fe05.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { FETCH_EXPENSES, FETCH_TOTALS, FETCH_TYPES, FETCH_AGGREGATE } from './types';\r\n\r\nexport const fetchExpenses = (month, year, sort) => async (dispatch) => {\r\n    const expenseList = await axios.get('/api/expense/' + month + '/' + year, { params: { sortBy: sort }});\r\n\r\n    dispatch({\r\n        type: FETCH_EXPENSES,\r\n        payload: expenseList.data\r\n    });\r\n};\r\n\r\nexport const deleteExpense = (expenseId) => async (dispatch) => {\r\n\tif(expenseId) {\r\n\t\tawait axios.delete('/api/expense/' + expenseId);\r\n\t} else {\r\n\t\tconsole.log(\"No ID supplied to deleteExpense. Doing nothing\");\r\n\t}\r\n};\r\n\r\nexport const fetchTotals = (month, year) => async (dispatch) => {\r\n    const expenseTotals = await axios.get('/api/expense/totals/' + month + '/' + year);\r\n\r\n    dispatch({\r\n        type: FETCH_TOTALS,\r\n        payload: expenseTotals.data\r\n    });\r\n};\r\n\r\nexport const fetchAggregate = (month, year) => async(dispatch) => {\r\n  const expenseAggregate = await axios.get('/api/expense/aggregate/' + month + '/' + year);\r\n\r\n  dispatch({\r\n    type: FETCH_AGGREGATE,\r\n    payload: expenseAggregate.data\r\n  });\r\n};\r\n\r\nexport const fetchTypes = () => async (dispatch) => {\r\n    const expenseTypes = await axios.get('/api/types');\r\n\r\n    dispatch({\r\n        type: FETCH_TYPES,\r\n        payload: expenseTypes.data\r\n    })\r\n};\r\n\r\nexport const addType = (name) => async (dispatch) => {\r\n    if(name) {\r\n        await axios.put('/api/types', { name });\r\n    } else {\r\n        console.log(\"No type name supplied to addType. Doing nothing\");\r\n    }\r\n};\r\n","export const FETCH_EXPENSES = 'fetch_expenses';\r\nexport const FETCH_TOTALS = 'fetch_totals';\r\nexport const FETCH_TYPES = 'fetch_types';\r\nexport const FETCH_AGGREGATE = 'fetch_aggregate';\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchTotals } from '../actions';\r\n\r\nclass Totals extends Component {\r\n    constructor({ month, year }) {\r\n        super();\r\n        this.state = { month, year }\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchTotals(new Date().getMonth() + 1, new Date().getFullYear());\r\n    }\r\n    render() {\r\n        return (\r\n\t\t\t<div className=\"card col s12 m6 l6\">\r\n\t\t\t\t<div className=\"card-content\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div style={{ display: 'inline-block', width: '120px' }}>Total:</div>\r\n\t\t\t\t\t\t<div style={{ textAlign: 'right', width: '60px', display: 'inline-block' }}>\r\n\t\t\t\t\t\t\t{ new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD'}).format(this.props.totals.total) }\r\n\t\t\t\t\t\t</div>                             \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div style={{ display: 'inline-block', width: '120px' }}>Remaining:</div>\r\n\t\t\t\t\t\t<div style={{ textAlign: 'right', width: '60px', display: 'inline-block' }}>\r\n\t\t\t\t\t\t\t{ new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD'}).format(this.props.totals.remaining) }\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ totals }) {\r\n    return { totals };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchTotals })(Totals);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchAggregate } from '../actions';\r\n\r\nclass Aggregate extends Component {\r\n  constructor({ month, year }) {\r\n      super();\r\n      this.state = { month, year, open: false }\r\n  }\r\n\r\n  componentDidMount() {\r\n      this.props.fetchAggregate(new Date().getMonth() + 1, new Date().getFullYear());\r\n  }\r\n\r\n  openClose = () => {\r\n    this.setState({\r\n      open: !this.state.open\r\n    })\r\n  }\r\n\r\n  renderAggregates = () => {\r\n    if(this.props.aggregate && this.props.aggregate.length > 0) {\r\n      return this.props.aggregate.map((aggr) => {\r\n        return (\r\n          <div className=\"col card s12 m4 l3\" key={aggr._id}>\r\n            <span>{aggr._id}</span>\r\n            <span className=\"secondary-content red-text\">\r\n              { new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD'}).format(aggr.total) }\r\n            </span>\r\n          </div>\r\n        );\r\n      });\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"\">\r\n        <div id=\"aggregateOpenClose\" className=\"small icon btn-flat\" onClick={this.openClose}>\r\n          <i className=\"material-icons left\">\r\n            { this.state.open ? 'expand_more' : 'expand_less' }\r\n          </i>\r\n        </div>\r\n        <div className={ this.state.open ? '' : 'hide' }>\r\n          { this.renderAggregates() }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ aggregate }) {\r\n    return { aggregate };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchAggregate })(Aggregate);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchExpenses, fetchTotals, fetchAggregate, deleteExpense } from '../actions';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'moment';\r\nimport ExpenseTotals from './ExpenseTotals';\r\nimport ExpenseAggregate from './ExpenseAggregate';\r\n\r\nclass ExpenseList extends Component {\r\n    constructor() {\r\n        super();\r\n\t\tthis.sortSelect = React.createRef();\r\n\t\tthis.filterSelect = React.createRef();\r\n        this.state = {\r\n            month: new Date().getMonth() + 1,\r\n            year: new Date().getFullYear(),\r\n\t\t\tsort: 'date desc',\r\n            loading: false\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.fetchExpenses(this.state.month, this.state.year, this.state.sort);\r\n    }\r\n\r\n    formatDate = (date) => {\r\n        const parsedDate = new Date(Date.parse(date));\r\n        return parsedDate.toDateString();\r\n    }\r\n\r\n    onDeleteExpense = async (id) => {\r\n        await this.props.deleteExpense(id);\r\n        this.refresh(true);\r\n    }\r\n\r\n    nextMonth = async () => {\r\n        var updatedMonth = -1;\r\n        var updatedYear = this.state.year;\r\n        if(this.state.month === 12){\r\n            updatedMonth = 1;\r\n            updatedYear = this.state.year + 1;\r\n        } else {\r\n            updatedMonth = this.state.month + 1;\r\n        }\r\n        await this.setState({\r\n            month: updatedMonth,\r\n            year: updatedYear,\r\n            loading: true\r\n        });\r\n        this.refresh(true);\r\n    }\r\n\r\n    previousMonth = async () => {\r\n        var updatedMonth = -1;\r\n        var updatedYear = this.state.year;\r\n        if(this.state.month === 1){\r\n            updatedMonth = 12;\r\n            updatedYear = this.state.year - 1;\r\n        } else {\r\n            updatedMonth = this.state.month - 1;\r\n        }\r\n\r\n        await this.setState({\r\n            month: updatedMonth,\r\n            year: updatedYear,\r\n            loading: true\r\n        });\r\n        this.refresh(true);\r\n    }\r\n\r\n\t/**\r\n\t  * Responds to sort selection events by the user. Causes the expense\r\n\t  * list to be refreshed.\r\n\t  *\r\n\t  */\r\n\tsort = async () => {\r\n\t\tconst sortBy = this.sortSelect.current.value;\r\n\t\tawait this.setState({\r\n\t\t\tsort: sortBy,\r\n\t\t\tloading: true\r\n\t\t});\r\n\t\tthis.refresh(false);\r\n\t}\r\n\r\n\t/*\r\n\t * Causes this component to refresh its data from the server (expense list and totals).\r\n\t *\r\n     * @param refreshTotals - Whether or not to refresh the totals and aggregate areas\r\n\t *\r\n\t */\r\n    refresh = async (refreshTotals) => {\r\n\t\tif(refreshTotals) {\r\n\t\t\tawait Promise.all([\r\n\t\t\t\tthis.props.fetchExpenses(this.state.month, this.state.year, this.state.sort),\r\n\t\t\t\tthis.props.fetchTotals(this.state.month, this.state.year),\r\n        this.props.fetchAggregate(this.state.month, this.state.year)\r\n\t\t\t]);\r\n\t\t} else {\r\n\t\t\tthis.props.fetchExpenses(this.state.month, this.state.year, this.state.sort);\r\n\t\t}\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    renderExpenses = () => {\r\n\t\tif(this.props.expense.expenses) {\r\n\t\t\treturn this.props.expense.expenses.map((expense) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"card col s6 m4 l2\" key={ expense._id }>\r\n\t\t\t\t\t\t<div className=\"card-content\">\r\n\t\t\t\t\t\t\t<span className=\"card-title\">{ expense.type }</span>\r\n\t\t\t\t\t\t\t<p>{ this.formatDate(expense.date) }</p>\r\n\t\t\t\t\t\t\t<p>{ new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD'}).format(expense.value) }</p>\r\n\t\t\t\t\t\t\t<p style={{ height: '100px', overflow: 'auto' }}>{ expense.description }</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"card-action\">\r\n\t\t\t\t\t\t\t<button className=\"btn-floating red right\" style={{ marginLeft: \"10px\"}}\r\n\t\t\t\t\t\t\t\tonClick={ () => this.onDeleteExpense(expense._id) }\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className=\"material-icons right\">delete</i>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<Link to={ { pathname: \"/expense/edit\", state: expense }} className=\"btn-floating red right\">\r\n\t\t\t\t\t\t\t\t<i className=\"material-icons right\">edit</i>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n    }\r\n    render =() => {\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <button className=\"btn red left\" onClick={ this.previousMonth }>\r\n                        <i className=\"material-icons\">keyboard_arrow_left</i>\r\n                    </button>\r\n                    <button className=\"btn red right\" onClick={ this.nextMonth }>\r\n                        <i className=\"material-icons\">keyboard_arrow_right</i>\r\n                    </button>\r\n                    <h5 className=\"red-text center\">{ Moment(new Date(\"\" + this.state.month + \"/01/\" + this.state.year)).format('MMMM') }, { this.state.year }</h5>\r\n                </div>\r\n                { this.state.loading ? <div className=\"progress\"><div className=\"indeterminate\"></div></div> : null }\r\n                <div className={ this.state.loading ? 'hide' : ''}>\r\n        \t\t\t\t\t<div className=\"row\">\r\n        \t\t\t\t\t\t<ExpenseTotals month={ this.state.month } year={ this.state.year } />\r\n        \t\t\t\t\t\t<div className=\"input-field col s6 m4 l3\">\r\n        \t\t\t\t\t\t\t<select style={{ display: 'block' }} value={ this.state.sort } ref={ this.sortSelect } onChange={ this.sort }>\r\n        \t\t\t\t\t\t\t\t<option value=\"date asc\">Date (oldest first)</option>\r\n        \t\t\t\t\t\t\t\t<option value=\"date desc\">Date (newest first)</option>\r\n        \t\t\t\t\t\t\t\t<option value=\"value asc\">Value (low to high)</option>\r\n        \t\t\t\t\t\t\t\t<option value=\"value desc\">Value (high to low)</option>\r\n        \t\t\t\t\t\t\t</select>\r\n        \t\t\t\t\t\t</div>\r\n        \t\t\t\t\t</div>\r\n\r\n                  <div className=\"row\">\r\n                    <ExpenseAggregate month={ this.state.month } year={ this.state.year } />\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n                    { this.renderExpenses() }\r\n                    <div className=\"fixed-action-btn\">\r\n                      <Link to=\"/expense/new\" className=\"btn-floating btn-large red right\">\r\n                        <i className=\"material-icons\">add</i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ expense }) {\r\n    return { expense };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchExpenses, fetchTotals, fetchAggregate, deleteExpense })(ExpenseList);\r\n","import React from 'react';\r\nimport ExpenseList from './ExpenseList';\r\n\r\nconst Home = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ExpenseList />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Materialize from 'materialize-css/dist/js/materialize.min';\r\nimport { fetchTypes, addType } from '../../actions';\r\nimport _ from 'lodash';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@material-ui/core';\r\n\r\nclass TypeList extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            open: false\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.props.fetchTypes();\r\n    }\r\n    \r\n    componentDidUpdate = () => {\r\n        Materialize.AutoInit();\r\n    }\r\n\r\n    onDialogOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        });\r\n    }\r\n\r\n    onDialogClose = () => {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n\r\n    onAddType = async () => {\r\n        const typeName = document.getElementById('typeName').value;\r\n        \r\n        if(typeName) {\r\n            await this.props.addType(typeName);\r\n            this.props.fetchTypes();\r\n        }\r\n        this.setState({ open: false });\r\n    }\r\n\r\n    renderAddTypeForm = () => {\r\n        return (\r\n            <Dialog \r\n                open={ this.state.open }\r\n            >\r\n                <DialogTitle>Add Type</DialogTitle>\r\n                <DialogContent>\r\n                    <input type=\"text\" id=\"typeName\" autoComplete=\"off\" />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button \r\n                        onClick={ this.onDialogClose }\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={ this.onAddType }\r\n                    >\r\n                        Add                        \r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n    renderOptions = () => {\r\n        return _.map(this.props.types, ({ name }) => {\r\n            return <option key={ name } value={ name }>{ name }</option>\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n        return (      \r\n            <div>\r\n                { this.renderAddTypeForm() }\r\n                <div className=\"row\">  \r\n                    <div style={{ padding: \"0\" }} className=\"input-field col s3\"> \r\n                        <select {...this.props.input}>\r\n                            <option value=\"\">Select a type</option>\r\n                            { this.renderOptions() }\r\n                        </select>                    \r\n                        { this.props.meta.touched && this.props.meta.error && <div><span className=\"red-text\">{ this.props.meta.error }</span></div> }                    \r\n                    </div>    \r\n                    <button style={{ position: 'relative', top: '25px', left: '20px' }} className=\"btn left red\" onClick={ this.onDialogOpen } type=\"button\">\r\n                        Add type\r\n                        <i className=\"material-icons left\">add</i>\r\n                    </button>    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ types }) {\r\n    return { types };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchTypes, addType })(TypeList);","import React, { Component } from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker';\r\nimport Moment from 'moment';\r\nimport TypeList from './TypeList';\r\n\r\nclass ExpenseForm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n    componentDidMount = () => {\r\n\t\tvar initProps = {};\r\n        if(this.props.expense) {\r\n            initProps = this.props.expense;\r\n            initProps.date = Moment(initProps.date).format('MM-DD-YYYY');\r\n        } else {\r\n\t\t\tinitProps.date = formatDateValue(new Date());\r\n\t\t}\r\n        this.props.initialize(initProps);\r\n\r\n    }\r\n\r\n    onDialogOpen = () => {\r\n        this.setState({ open: true });\r\n    }\r\n\r\n    onDialogClose = () => {\r\n        this.setState({ open: false });\r\n    }\r\n\r\n    renderFields = () => {\r\n        return (\r\n            <div>\r\n                <Field key=\"value\" name=\"value\" label=\"Amount\" type=\"number\" component={renderTextField} />\r\n                <Field key=\"type\" name=\"type\" label=\"Type\" component={TypeList} onDialogOpen={ this.onDialogOpen } />\r\n                <Field key=\"date\" name=\"date\" label=\"Date\" component={renderDatePickerField} />\r\n                <Field key=\"description\" name=\"description\" label=\"Description\" component={renderTextField} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <form onSubmit={ this.props.handleSubmit(this.props.onExpenseSubmit) }>\r\n                    { this.renderFields() }\r\n                    <Link style={{ marginTop: '20px', zIndex: \"-1\" }} to=\"/\" className=\"btn waves-effect waves-light white-text left red\">\r\n                        Cancel\r\n                        <i className=\"material-icons left\">cancel</i>\r\n                    </Link>\r\n                    <button style={{ marginTop: '20px' }} className=\"btn waves-effect waves-light white-text right red\" type=\"submit\">\r\n                        Submit\r\n                        <i className=\"material-icons left\">send</i>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst renderTextField = ({ input, label, type = \"text\", meta: { touched, error }}) => {\r\n    return (\r\n        <div>\r\n            <label>{ label }</label>\r\n            <input {...input} type={ type } autoComplete=\"off\" />\r\n            { touched && error && <span className=\"red-text\">{ error }</span> }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst renderDatePickerField = ({ input, meta: { touched, error }}) => {\r\n    return (\r\n        <div>\r\n            <DatePicker\r\n                {...input}\r\n                selected={ input.value ? new Date(Date.parse(input.value)) : new Date() }\r\n                value={ input.value ? formatDateValue(input.value) : formatDateValue(new Date()) }\r\n                placeholderText=\"Select a date\"\r\n                dateFormat=\"MM-dd-YYYY\"\r\n                autoComplete=\"off\"\r\n            />\r\n            { touched && error && <div><span className=\"red-text\">{ error }</span></div> }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst formatDateValue = (date) => {\r\n    if(typeof date == 'string'){\r\n        return date;\r\n    }\r\n    const parsedDate = Moment(date).toDate();\r\n    return Moment(parsedDate).format('MM-DD-YYYY');\r\n};\r\n\r\nconst validate = (values) => {\r\n    const errors =  {};\r\n\r\n    if(!values.value) {\r\n        errors.value = 'Please specify an amount';\r\n    }\r\n    if(!values.type) {\r\n        errors.type = 'Please select a type';\r\n    }\r\n    if(!values.date) {\r\n        errors.date = 'Please specify a date';\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\nexport default reduxForm({\r\n    validate,\r\n    form: 'expenseForm'\r\n})(ExpenseForm);\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { reduxForm } from 'redux-form';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nclass ExpenseNew extends Component {\r\n    async submitExpense(values) {\r\n        try{\r\n            await axios.put('/api/expense', values);\r\n        } catch(error) {\r\n            alert(\"Something bad happened! \" + error);\r\n        }\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <h5 className=\"red-text\">Create a new expense</h5>\r\n                <ExpenseForm onExpenseSubmit = { (values) => this.submitExpense(values) } />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default reduxForm({\r\n    form: 'expenseForm'\r\n})(ExpenseNew)","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nclass ExpenseEdit extends Component {\r\n    async updateExpense(values) {\r\n        try{\r\n            await axios.post('/api/expense/' + values._id, values);\r\n        } catch(error) {\r\n            alert(\"Something bad happened! \" + error);\r\n        }\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        return (         \r\n            <div>   \r\n                <h5 className=\"red-text\">Edit expense</h5>\r\n                <ExpenseForm onExpenseSubmit = { (values) => this.updateExpense(values) } expense={ this.props.location.state } />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExpenseEdit;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\n\r\nimport Home from './Home';\r\nimport ExpenseNew from './expense/ExpenseNew';\r\nimport ExpenseEdit from './expense/ExpenseEdit';\r\n\r\nclass App extends Component {    \r\n    render(){\r\n        return (\r\n            <BrowserRouter>\r\n                <div className=\"container\">\r\n                    <Route path=\"/\" exact component={Home} />\r\n                    <Route path=\"/expense/new\" component={ExpenseNew} />\r\n                    <Route path=\"/expense/edit\" component={ExpenseEdit} />\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, actions)(App);"," import { combineReducers } from 'redux';\r\n import expenseReducer from './expenseReducer';\r\n import totalsReducer from './totalsReducer';\r\n import aggregateReducer from './aggregateReducer';\r\n import typesReducer from './typesReducer';\r\n import { reducer as formReducer } from 'redux-form';\r\n\r\n export default combineReducers({\r\n    expense: expenseReducer,\r\n    totals: totalsReducer,\r\n    form: formReducer,\r\n    types: typesReducer,\r\n    aggregate: aggregateReducer\r\n });\r\n","import { FETCH_EXPENSES } from '../actions/types';\r\n\r\nexport default function (state = [], action) {\r\n    switch(action.type) {\r\n        case FETCH_EXPENSES:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};","import { FETCH_TOTALS } from '../actions/types';\r\n\r\nexport default function (state = {}, action) {\r\n    switch(action.type) {\r\n        case FETCH_TOTALS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};","import { FETCH_TYPES } from '../actions/types';\r\n\r\nexport default function (state = [], action) {\r\n    switch(action.type) {\r\n        case FETCH_TYPES:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};","import { FETCH_AGGREGATE } from '../actions/types';\r\n\r\nexport default function (state = {}, action) {\r\n    switch(action.type) {\r\n        case FETCH_AGGREGATE:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import 'materialize-css/dist/css/materialize.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n    <Provider store={store}> <App /> </Provider>,\n    document.querySelector('#root')\n);\n"],"sourceRoot":""}